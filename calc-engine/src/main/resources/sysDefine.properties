# 拓扑逻辑名称
topology.name=qyallStorm
################################################# KAFKA ############################################
#车辆实时数据topic
kafka.topic.veh_realinfo_data=us_general
#Zookeeper根目录
kafka.zkroot=/stormcal
#kafka车辆实时数据组名
kafka.metadata.veh_realinfo_groupid=realinfo
#kafka数据消费者连接地址
kafka.zk.hosts=192.168.1.100:2181,192.168.1.101:2181,192.168.1.102:2181
#Zookeeper端口
kafka.zkPort=2181
#Zookeeper地址
kafka.zkServers=192.168.1.100,192.168.1.101,192.168.1.102
#kafka生产者连接地址
kafka.broker.hosts=192.168.1.101:9092,192.168.1.102:9092
#APP操作，平台到STORM的消息组ID
kafka.metadata.veh_test_groupid=testcommand
#设置打印log等级
#0：不打印  1：打印测试命令信息及测试车辆数据，kafka发送信息 2：只打印redis信息和测试命令信息及测试车辆数据  5：打印所有，包括所有车辆数据
print.log=1
#车辆报警topic
kafka.topic.alarm=ALARM_NEW
#车辆报警状态存储topic
kafka.topic.alarmstore=SYNC_ALARM_STORE
#车辆实时数据存储topic
kafka.topic.realinfostore=SYNC_REALINFO_STORE
#围栏告警
kafka.topic.fencealarm=FENCE_ALARM_TOPIC
#原始报文
kafka.topic.errordatatopic=us_packet
#错误报文组名
kafka.metadata.veh_error_groupid=errordata

kafka.writer.no=100
################################################# REDIS ############################################
#redis连接地址
redis.host=192.168.1.185
#redis端口
redis.port=6379
#redis密码
redis.pass=
#redis最大连接数
redis.maxActive=1000
#redis最大空闲数
redis.maxIdle=100
#redis最长等待时间(毫秒)
redis.maxWait=300000
#redis超时时间(毫秒)
redis.timeOut=300000
#获取redis预处理、预警间隔时间(毫秒)
redis.timeInterval=300
#定时更新redis间隔时间(毫秒)
redis.listenInterval=300

redis.totalInterval=180

################################################# CTFO ############################################
#分布式redis地址
ctfo.cacheHost=192.168.1.185
#分布式redis端口
ctfo.cachePort=6379
#分布式redis库名称
ctfo.cacheDB=xny
#分布式redis表名
ctfo.cacheTable=realInfo
ctfo.supplyTable=supply
#扩展集群按照以下参数的倍数扩展可以达到效率最高
storm.kafka.spout.no=1
storm.worker.no=1
storm.worker.bolt.no=2
alarm.frame.cache=false
producer.poolNo=32
producer.againNo=8
#10秒
redis.offline.time=600
redis.offline.stoptime=180
redis.monitor.time=600
#ms 600*1000
redis.custom.dataitem.reload=600000
stat.thread.no=30
ctx.cache.no=18


# oracle
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@192.168.1.49:1521:evmsc
#jdbc.username=ev726
#jdbc.password=ev
#db.cache.flushtime=360

# mysql
jdbc.driver=com.mysql.cj.jdbc.Driver
jdbc.url=jdbc:mysql://192.168.1.106:3306/evsmc?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false
jdbc.username=root
jdbc.password=123456
# 查询数据库间隔
db.cache.flushtime=360

#ya an action topic
kafka.topic.action=user_action_ya
kafka.topic.customfault=CUSTOM_FAULT
# send es oncetime,unit s
es.send.time=1800
kafka.topic.es.status=REALTIME_STATUS_TOPIC
offline.check.time=60
#source platform reg
kafka.platform.veh.reg=SYNC_VEHICLE_REG
kafka.platform.group=reggroup
# need syn :2,not syn 0 or other
redis.cluster.data.syn=1
kafka.topic.notice=notice_topic_QY
# 长期离线车辆判定时长(秒)
gt.inidle.timeOut.time=86400
# inidle.timeOut.check.time not gt 2400
inidle.timeOut.check.time=1800
redis.offline.checktime=90
sys.reboot.nocheck=1
alarm.continue.counts=3

# 是否启用点火熄火通知
sys.ignite.rule=0
# 是否启用异常用车通知
sys.abnormal.rule=0
# 是否启用飞机异常通知
sys.fly.rule=0
# 是否启用车辆离线通知
sys.onoff.rule=1
# 是否启用里程跳变通知
sys.milehop.rule=1
# 是否启用车辆锁止变化通知
sys.carlockstatus.rule=1

# 是否启用CAN监测通知
sys.can.rule=1
# 触发CAN故障需要的连续帧数
notice.can.fault.trigger.continue.count=3
# 触发CAN故障需要的持续时长
notice.can.fault.trigger.timeout.millisecond=60000
# 触发CAN正常需要的连续帧数
notice.can.normal.trigger.continue.count=3
# 触发CAN正常需要的持续时长
notice.can.normal.trigger.timeout.millisecond=60000

# 是否启用时间异常通知
sys.time.rule=1
# 时间数值异常范围
notice.time.range.abs.millisecond=600000

# 是否启用SOC过低通知
sys.soc.rule=1
#soc时间阈值（毫秒）
soc.judge.time=60000
#soc帧数判断
soc.judge.no=10
#soc过低阈值
lt.alarm.soc=10

# 是否启用未定位通知
sys.gps.rule=1
# 触发定位故障需要的连续帧数
gps.novalue.continue.no=5
# 触发定位正常需要的连续帧数
gps.hasvalue.continue.no=10
# 触发定位故障需要的持续时长(秒)
gps.judge.time=60


# 厂商规则覆盖, 默认为default, 支持{jili}
rule.override=jili

# 车辆车型刷新间隔(秒), 不应大于30分钟
veh.model.cache.refresh.second=900